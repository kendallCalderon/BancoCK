//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BancoCK.WBSMetodos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WBSMetodos.IWBSmetodos")]
    public interface IWBSmetodos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/abrirConexion", ReplyAction="http://tempuri.org/IWBSmetodos/abrirConexionResponse")]
        void abrirConexion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/abrirConexion", ReplyAction="http://tempuri.org/IWBSmetodos/abrirConexionResponse")]
        System.Threading.Tasks.Task abrirConexionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/cerrarConexion", ReplyAction="http://tempuri.org/IWBSmetodos/cerrarConexionResponse")]
        void cerrarConexion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/cerrarConexion", ReplyAction="http://tempuri.org/IWBSmetodos/cerrarConexionResponse")]
        System.Threading.Tasks.Task cerrarConexionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamosClientes", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamosClientesResponse")]
        System.Data.DataTable devolverPrestamosClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamosClientes", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamosClientesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamosClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/guardarInformacionClienteNoAutenticado", ReplyAction="http://tempuri.org/IWBSmetodos/guardarInformacionClienteNoAutenticadoResponse")]
        void guardarInformacionClienteNoAutenticado(string cedula, string nombre, string apellido1, string apellido2, string correo, int telefono, string rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/guardarInformacionClienteNoAutenticado", ReplyAction="http://tempuri.org/IWBSmetodos/guardarInformacionClienteNoAutenticadoResponse")]
        System.Threading.Tasks.Task guardarInformacionClienteNoAutenticadoAsync(string cedula, string nombre, string apellido1, string apellido2, string correo, int telefono, string rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/mostrarDescripcion", ReplyAction="http://tempuri.org/IWBSmetodos/mostrarDescripcionResponse")]
        string mostrarDescripcion(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/mostrarDescripcion", ReplyAction="http://tempuri.org/IWBSmetodos/mostrarDescripcionResponse")]
        System.Threading.Tasks.Task<string> mostrarDescripcionAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/mostrarRequisitos", ReplyAction="http://tempuri.org/IWBSmetodos/mostrarRequisitosResponse")]
        string mostrarRequisitos(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/mostrarRequisitos", ReplyAction="http://tempuri.org/IWBSmetodos/mostrarRequisitosResponse")]
        System.Threading.Tasks.Task<string> mostrarRequisitosAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/registrarPrestamoClienteOriginal", ReplyAction="http://tempuri.org/IWBSmetodos/registrarPrestamoClienteOriginalResponse")]
        void registrarPrestamoClienteOriginal(string identificacion, string fechaCredito, string estadoCredito, float monto, int plazoAños, double cuotaMensual, float salarioNeto, int añosLaborando, float salarioBruto, string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/registrarPrestamoClienteOriginal", ReplyAction="http://tempuri.org/IWBSmetodos/registrarPrestamoClienteOriginalResponse")]
        System.Threading.Tasks.Task registrarPrestamoClienteOriginalAsync(string identificacion, string fechaCredito, string estadoCredito, float monto, int plazoAños, double cuotaMensual, float salarioNeto, int añosLaborando, float salarioBruto, string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/CredencialesUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/CredencialesUsuarioResponse")]
        string CredencialesUsuario(string Identificacion, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/CredencialesUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/CredencialesUsuarioResponse")]
        System.Threading.Tasks.Task<string> CredencialesUsuarioAsync(string Identificacion, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/RegistrarUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/RegistrarUsuarioResponse")]
        void RegistrarUsuario(string Identificacion, string Nombre, string Rol, string PrimerApellido, string SegundoApellido, string Correo, string Telefono, string Password, string TipoCedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/RegistrarUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/RegistrarUsuarioResponse")]
        System.Threading.Tasks.Task RegistrarUsuarioAsync(string Identificacion, string Nombre, string Rol, string PrimerApellido, string SegundoApellido, string Correo, string Telefono, string Password, string TipoCedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/asignarAnalista", ReplyAction="http://tempuri.org/IWBSmetodos/asignarAnalistaResponse")]
        void asignarAnalista(string identificacion, int idPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/asignarAnalista", ReplyAction="http://tempuri.org/IWBSmetodos/asignarAnalistaResponse")]
        System.Threading.Tasks.Task asignarAnalistaAsync(string identificacion, int idPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamos_nombre_cedula", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamos_nombre_cedulaResponse")]
        System.Data.DataTable devolverPrestamos_nombre_cedula(string tipoPrestamo, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamos_nombre_cedula", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamos_nombre_cedulaResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamos_nombre_cedulaAsync(string tipoPrestamo, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamos_tipoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamos_tipoPrestamoResponse")]
        System.Data.DataTable devolverPrestamos_tipoPrestamo(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverPrestamos_tipoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverPrestamos_tipoPrestamoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamos_tipoPrestamoAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/cambiarEstadoPrestamoSolicitud", ReplyAction="http://tempuri.org/IWBSmetodos/cambiarEstadoPrestamoSolicitudResponse")]
        void cambiarEstadoPrestamoSolicitud(int idPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/cambiarEstadoPrestamoSolicitud", ReplyAction="http://tempuri.org/IWBSmetodos/cambiarEstadoPrestamoSolicitudResponse")]
        System.Threading.Tasks.Task cambiarEstadoPrestamoSolicitudAsync(int idPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverCedulaAnalista", ReplyAction="http://tempuri.org/IWBSmetodos/devolverCedulaAnalistaResponse")]
        string devolverCedulaAnalista(string nombre, string apellido1, string apellido2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverCedulaAnalista", ReplyAction="http://tempuri.org/IWBSmetodos/devolverCedulaAnalistaResponse")]
        System.Threading.Tasks.Task<string> devolverCedulaAnalistaAsync(string nombre, string apellido1, string apellido2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/ValidarExistenciaUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/ValidarExistenciaUsuarioResponse")]
        bool ValidarExistenciaUsuario(string Identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/ValidarExistenciaUsuario", ReplyAction="http://tempuri.org/IWBSmetodos/ValidarExistenciaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ValidarExistenciaUsuarioAsync(string Identificacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoResponse")]
        float devolverTasaTipoPrestamo(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoResponse")]
        System.Threading.Tasks.Task<float> devolverTasaTipoPrestamoAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/enviarCorreo", ReplyAction="http://tempuri.org/IWBSmetodos/enviarCorreoResponse")]
        bool enviarCorreo(string receptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/enviarCorreo", ReplyAction="http://tempuri.org/IWBSmetodos/enviarCorreoResponse")]
        System.Threading.Tasks.Task<bool> enviarCorreoAsync(string receptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/enviarCorreoNoLogueado", ReplyAction="http://tempuri.org/IWBSmetodos/enviarCorreoNoLogueadoResponse")]
        bool enviarCorreoNoLogueado(string receptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/enviarCorreoNoLogueado", ReplyAction="http://tempuri.org/IWBSmetodos/enviarCorreoNoLogueadoResponse")]
        System.Threading.Tasks.Task<bool> enviarCorreoNoLogueadoAsync(string receptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/ObtenerCorreo", ReplyAction="http://tempuri.org/IWBSmetodos/ObtenerCorreoResponse")]
        string ObtenerCorreo(string Identificacion, string Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/ObtenerCorreo", ReplyAction="http://tempuri.org/IWBSmetodos/ObtenerCorreoResponse")]
        System.Threading.Tasks.Task<string> ObtenerCorreoAsync(string Identificacion, string Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoResponse")]
        string devolverLimiteMontoPrestamo(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamo", ReplyAction="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoResponse")]
        System.Threading.Tasks.Task<string> devolverLimiteMontoPrestamoAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoDolares", ReplyAction="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoDolaresResponse")]
        string devolverLimiteMontoPrestamoDolares(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoDolares", ReplyAction="http://tempuri.org/IWBSmetodos/devolverLimiteMontoPrestamoDolaresResponse")]
        System.Threading.Tasks.Task<string> devolverLimiteMontoPrestamoDolaresAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoDolares", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoDolaresResponse")]
        float devolverTasaTipoPrestamoDolares(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoDolares", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaTipoPrestamoDolaresResponse")]
        System.Threading.Tasks.Task<float> devolverTasaTipoPrestamoDolaresAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/calcularCuotaMensual", ReplyAction="http://tempuri.org/IWBSmetodos/calcularCuotaMensualResponse")]
        double calcularCuotaMensual(float prestamo, int años, float tasaInteres);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/calcularCuotaMensual", ReplyAction="http://tempuri.org/IWBSmetodos/calcularCuotaMensualResponse")]
        System.Threading.Tasks.Task<double> calcularCuotaMensualAsync(float prestamo, int años, float tasaInteres);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaDolaresUsuarioNoLogeado", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaDolaresUsuarioNoLogeadoResponse")]
        float devolverTasaDolaresUsuarioNoLogeado(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaDolaresUsuarioNoLogeado", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaDolaresUsuarioNoLogeadoResponse")]
        System.Threading.Tasks.Task<float> devolverTasaDolaresUsuarioNoLogeadoAsync(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaColonesUsuarioNoLogeado", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaColonesUsuarioNoLogeadoResponse")]
        float devolverTasaColonesUsuarioNoLogeado(string tipoPrestamo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWBSmetodos/devolverTasaColonesUsuarioNoLogeado", ReplyAction="http://tempuri.org/IWBSmetodos/devolverTasaColonesUsuarioNoLogeadoResponse")]
        System.Threading.Tasks.Task<float> devolverTasaColonesUsuarioNoLogeadoAsync(string tipoPrestamo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWBSmetodosChannel : BancoCK.WBSMetodos.IWBSmetodos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WBSmetodosClient : System.ServiceModel.ClientBase<BancoCK.WBSMetodos.IWBSmetodos>, BancoCK.WBSMetodos.IWBSmetodos {
        
        public WBSmetodosClient() {
        }
        
        public WBSmetodosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WBSmetodosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WBSmetodosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WBSmetodosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void abrirConexion() {
            base.Channel.abrirConexion();
        }
        
        public System.Threading.Tasks.Task abrirConexionAsync() {
            return base.Channel.abrirConexionAsync();
        }
        
        public void cerrarConexion() {
            base.Channel.cerrarConexion();
        }
        
        public System.Threading.Tasks.Task cerrarConexionAsync() {
            return base.Channel.cerrarConexionAsync();
        }
        
        public System.Data.DataTable devolverPrestamosClientes() {
            return base.Channel.devolverPrestamosClientes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamosClientesAsync() {
            return base.Channel.devolverPrestamosClientesAsync();
        }
        
        public void guardarInformacionClienteNoAutenticado(string cedula, string nombre, string apellido1, string apellido2, string correo, int telefono, string rol) {
            base.Channel.guardarInformacionClienteNoAutenticado(cedula, nombre, apellido1, apellido2, correo, telefono, rol);
        }
        
        public System.Threading.Tasks.Task guardarInformacionClienteNoAutenticadoAsync(string cedula, string nombre, string apellido1, string apellido2, string correo, int telefono, string rol) {
            return base.Channel.guardarInformacionClienteNoAutenticadoAsync(cedula, nombre, apellido1, apellido2, correo, telefono, rol);
        }
        
        public string mostrarDescripcion(string tipoPrestamo) {
            return base.Channel.mostrarDescripcion(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<string> mostrarDescripcionAsync(string tipoPrestamo) {
            return base.Channel.mostrarDescripcionAsync(tipoPrestamo);
        }
        
        public string mostrarRequisitos(string tipoPrestamo) {
            return base.Channel.mostrarRequisitos(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<string> mostrarRequisitosAsync(string tipoPrestamo) {
            return base.Channel.mostrarRequisitosAsync(tipoPrestamo);
        }
        
        public void registrarPrestamoClienteOriginal(string identificacion, string fechaCredito, string estadoCredito, float monto, int plazoAños, double cuotaMensual, float salarioNeto, int añosLaborando, float salarioBruto, string tipoPrestamo) {
            base.Channel.registrarPrestamoClienteOriginal(identificacion, fechaCredito, estadoCredito, monto, plazoAños, cuotaMensual, salarioNeto, añosLaborando, salarioBruto, tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task registrarPrestamoClienteOriginalAsync(string identificacion, string fechaCredito, string estadoCredito, float monto, int plazoAños, double cuotaMensual, float salarioNeto, int añosLaborando, float salarioBruto, string tipoPrestamo) {
            return base.Channel.registrarPrestamoClienteOriginalAsync(identificacion, fechaCredito, estadoCredito, monto, plazoAños, cuotaMensual, salarioNeto, añosLaborando, salarioBruto, tipoPrestamo);
        }
        
        public string CredencialesUsuario(string Identificacion, string password) {
            return base.Channel.CredencialesUsuario(Identificacion, password);
        }
        
        public System.Threading.Tasks.Task<string> CredencialesUsuarioAsync(string Identificacion, string password) {
            return base.Channel.CredencialesUsuarioAsync(Identificacion, password);
        }
        
        public void RegistrarUsuario(string Identificacion, string Nombre, string Rol, string PrimerApellido, string SegundoApellido, string Correo, string Telefono, string Password, string TipoCedula) {
            base.Channel.RegistrarUsuario(Identificacion, Nombre, Rol, PrimerApellido, SegundoApellido, Correo, Telefono, Password, TipoCedula);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioAsync(string Identificacion, string Nombre, string Rol, string PrimerApellido, string SegundoApellido, string Correo, string Telefono, string Password, string TipoCedula) {
            return base.Channel.RegistrarUsuarioAsync(Identificacion, Nombre, Rol, PrimerApellido, SegundoApellido, Correo, Telefono, Password, TipoCedula);
        }
        
        public void asignarAnalista(string identificacion, int idPrestamo) {
            base.Channel.asignarAnalista(identificacion, idPrestamo);
        }
        
        public System.Threading.Tasks.Task asignarAnalistaAsync(string identificacion, int idPrestamo) {
            return base.Channel.asignarAnalistaAsync(identificacion, idPrestamo);
        }
        
        public System.Data.DataTable devolverPrestamos_nombre_cedula(string tipoPrestamo, string cedula) {
            return base.Channel.devolverPrestamos_nombre_cedula(tipoPrestamo, cedula);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamos_nombre_cedulaAsync(string tipoPrestamo, string cedula) {
            return base.Channel.devolverPrestamos_nombre_cedulaAsync(tipoPrestamo, cedula);
        }
        
        public System.Data.DataTable devolverPrestamos_tipoPrestamo(string tipoPrestamo) {
            return base.Channel.devolverPrestamos_tipoPrestamo(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> devolverPrestamos_tipoPrestamoAsync(string tipoPrestamo) {
            return base.Channel.devolverPrestamos_tipoPrestamoAsync(tipoPrestamo);
        }
        
        public void cambiarEstadoPrestamoSolicitud(int idPrestamo) {
            base.Channel.cambiarEstadoPrestamoSolicitud(idPrestamo);
        }
        
        public System.Threading.Tasks.Task cambiarEstadoPrestamoSolicitudAsync(int idPrestamo) {
            return base.Channel.cambiarEstadoPrestamoSolicitudAsync(idPrestamo);
        }
        
        public string devolverCedulaAnalista(string nombre, string apellido1, string apellido2) {
            return base.Channel.devolverCedulaAnalista(nombre, apellido1, apellido2);
        }
        
        public System.Threading.Tasks.Task<string> devolverCedulaAnalistaAsync(string nombre, string apellido1, string apellido2) {
            return base.Channel.devolverCedulaAnalistaAsync(nombre, apellido1, apellido2);
        }
        
        public bool ValidarExistenciaUsuario(string Identificacion) {
            return base.Channel.ValidarExistenciaUsuario(Identificacion);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarExistenciaUsuarioAsync(string Identificacion) {
            return base.Channel.ValidarExistenciaUsuarioAsync(Identificacion);
        }
        
        public float devolverTasaTipoPrestamo(string tipoPrestamo) {
            return base.Channel.devolverTasaTipoPrestamo(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<float> devolverTasaTipoPrestamoAsync(string tipoPrestamo) {
            return base.Channel.devolverTasaTipoPrestamoAsync(tipoPrestamo);
        }
        
        public bool enviarCorreo(string receptor) {
            return base.Channel.enviarCorreo(receptor);
        }
        
        public System.Threading.Tasks.Task<bool> enviarCorreoAsync(string receptor) {
            return base.Channel.enviarCorreoAsync(receptor);
        }
        
        public bool enviarCorreoNoLogueado(string receptor) {
            return base.Channel.enviarCorreoNoLogueado(receptor);
        }
        
        public System.Threading.Tasks.Task<bool> enviarCorreoNoLogueadoAsync(string receptor) {
            return base.Channel.enviarCorreoNoLogueadoAsync(receptor);
        }
        
        public string ObtenerCorreo(string Identificacion, string Rol) {
            return base.Channel.ObtenerCorreo(Identificacion, Rol);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerCorreoAsync(string Identificacion, string Rol) {
            return base.Channel.ObtenerCorreoAsync(Identificacion, Rol);
        }
        
        public string devolverLimiteMontoPrestamo(string tipoPrestamo) {
            return base.Channel.devolverLimiteMontoPrestamo(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<string> devolverLimiteMontoPrestamoAsync(string tipoPrestamo) {
            return base.Channel.devolverLimiteMontoPrestamoAsync(tipoPrestamo);
        }
        
        public string devolverLimiteMontoPrestamoDolares(string tipoPrestamo) {
            return base.Channel.devolverLimiteMontoPrestamoDolares(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<string> devolverLimiteMontoPrestamoDolaresAsync(string tipoPrestamo) {
            return base.Channel.devolverLimiteMontoPrestamoDolaresAsync(tipoPrestamo);
        }
        
        public float devolverTasaTipoPrestamoDolares(string tipoPrestamo) {
            return base.Channel.devolverTasaTipoPrestamoDolares(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<float> devolverTasaTipoPrestamoDolaresAsync(string tipoPrestamo) {
            return base.Channel.devolverTasaTipoPrestamoDolaresAsync(tipoPrestamo);
        }
        
        public double calcularCuotaMensual(float prestamo, int años, float tasaInteres) {
            return base.Channel.calcularCuotaMensual(prestamo, años, tasaInteres);
        }
        
        public System.Threading.Tasks.Task<double> calcularCuotaMensualAsync(float prestamo, int años, float tasaInteres) {
            return base.Channel.calcularCuotaMensualAsync(prestamo, años, tasaInteres);
        }
        
        public float devolverTasaDolaresUsuarioNoLogeado(string tipoPrestamo) {
            return base.Channel.devolverTasaDolaresUsuarioNoLogeado(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<float> devolverTasaDolaresUsuarioNoLogeadoAsync(string tipoPrestamo) {
            return base.Channel.devolverTasaDolaresUsuarioNoLogeadoAsync(tipoPrestamo);
        }
        
        public float devolverTasaColonesUsuarioNoLogeado(string tipoPrestamo) {
            return base.Channel.devolverTasaColonesUsuarioNoLogeado(tipoPrestamo);
        }
        
        public System.Threading.Tasks.Task<float> devolverTasaColonesUsuarioNoLogeadoAsync(string tipoPrestamo) {
            return base.Channel.devolverTasaColonesUsuarioNoLogeadoAsync(tipoPrestamo);
        }
    }
}
